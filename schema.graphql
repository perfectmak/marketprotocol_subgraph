# this implies MarketContractMPX
type MarketContract @entity {
  id: ID!
  creator: Bytes
  name: String
  collateralTokenAddress: Bytes
  collateralPoolAddress: Bytes
  collateralPoolBalance: BigInt
  priceFloor: BigInt
  priceCap: BigInt
  priceDecimalPlaces: BigInt
  qtyMultiplier: BigInt
  expirationTimestamp: BigInt
  collateralPerUnit: BigInt
  collateralTokenFeePerUnit: BigInt
  mktTokenFeePerUnit: BigInt
  settlementDelay: BigInt
  shortPositionToken: PositionToken
  longPositionToken: PositionToken
  lastPrice: BigInt
  settlementPrice: BigInt
  settlementTimeStamp: BigInt
  isSettled: Boolean
  isWhitelisted: Boolean
  factoryAddress: Bytes
  oracleUrl: String
  oracleStatistic: String
  oracleHubAddress: Bytes
}

enum MarketSide {
  Long
  Short
  Unknown
}

type PositionToken @entity {
  id: ID!
  name: String
  symbol: String
  decimals: Int
  marketSide: MarketSide
  marketContract: MarketContract
  isMintable: Boolean
}

# I can get a list of all tokens this person owns
type PositionTokenOwner @entity {
  id: ID! # owner+token Address
  owner: Bytes!
  token: PositionToken!
  balance: BigInt
}

# log records of minting actions
type PositionTokenMintedEvent @entity {
  id: ID!
  qtyMinted: BigInt!
  marketContract: MarketContract!
  owner: Bytes!
  collateralLocked: BigInt!
  fee: BigInt!
  feeTokenAddress: Bytes!
  timestamp: BigInt!
}

# log records of redeeming actions
type PositionTokenRedeemedEvent @entity {
  id: ID!
  longQtyRedeemed: BigInt!
  shortQtyRedeemed: BigInt!
  marketContract: MarketContract!
  owner: Bytes!
  collateralUnlocked: BigInt!
  timestamp: BigInt!
}